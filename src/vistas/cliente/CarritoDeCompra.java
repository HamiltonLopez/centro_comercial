/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.cliente;

import controladores.ControladorCliente;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import modelos.Cliente;
import modelos.Compra;
import modelos.Producto;
import modelos.Venta;
import util.Lista;

/**
 *
 * @author Asus
 */
public class CarritoDeCompra extends javax.swing.JPanel {

    private DefaultTableModel model;
    ControladorCliente controlador;
    Cliente cliente;

    public CarritoDeCompra(ControladorCliente controlador) {
        initComponents();
        model = new DefaultTableModel();

        this.tablaCarrito.setModel(model);
        model.addColumn("Cantidad");
        model.addColumn("Nombre");
        model.addColumn("Identificador");
        model.addColumn("Precio");
        this.controlador = controlador;
        cliente = controlador.getCliente();
        limpiar();
    }

    public void removerTablaCarrito() {

        for (int i = 0; i < model.getRowCount(); i++) {
            model.removeRow(i);
        }

    }

    public void limpiar() {

        removerTablaCarrito();
        llenarTablaCarrito();

        int total = 0;
        if (model.getRowCount() > 0) {
            for (int i = 0; i < tablaCarrito.getRowCount(); i++) {
                int suma = Integer.parseInt(tablaCarrito.getValueAt(i, 3).toString());
                total += suma;
            }
            txtTotal.setText(String.valueOf(total));
        } else {
            txtTotal.setText("0");
        }
    }

    public void llenarTablaCarrito() {
        removerTablaCarrito();

        Lista<Producto> productos = cliente.getCarrito();
        for (int i = 0; i < productos.Size(); i++) {
            Producto producto = productos.obtener(i);
            if (producto != null) {

                String[] info = new String[4];
                info[0] = String.valueOf(producto.getCantBodega());
                info[1] = producto.getNombreProducto();
                info[2] = producto.getIdentificador();
                info[3] = String.valueOf(producto.getPrecio());

                model.addRow(info);

            } else {

            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel17 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCarrito = new javax.swing.JTable();
        btnComprar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        tablaCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablaCarrito);

        btnComprar.setBackground(new java.awt.Color(0, 153, 153));
        btnComprar.setForeground(new java.awt.Color(255, 255, 255));
        btnComprar.setText("FINALIZAR COMPRA");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("TOTAL A PAGAR :");

        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtTotal.setBorder(null);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("$");

        jButton1.setBackground(new java.awt.Color(0, 153, 153));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ELIMINAR");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 593, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtTotal, javax.swing.GroupLayout.DEFAULT_SIZE, 167, Short.MAX_VALUE)
                    .addComponent(jLabel7)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(63, 63, 63)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(27, 27, 27)
                        .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton1))
                    .addGroup(jPanel17Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 495, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(71, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        if (cliente.getCarrito().Size() == 0) {
            JOptionPane.showMessageDialog(null, "No hay ning√∫n articulo dentro del carrito.\nIntente nuevamente");
        } else {
            Date fecha = new Date();
            int compraTotal = Integer.parseInt(txtTotal.getText());
            Lista<Producto> productos = controlador.getCarrito();
            int total = controlador.retornarCantidadProductos(productos);
            Compra compra = new Compra(productos);
            compra.setArticulos(total);
            Date hoy = new Date(fecha.getYear(), fecha.getMonth(), fecha.getDay());
            Venta venta = new Venta(cliente, fecha, compraTotal, compra);
            boolean aux = controlador.comprarProducto(venta);

            if (aux) {
                
                JOptionPane.showMessageDialog(null, "La compra ha sido √©xitosa.\nFelicitaciones entras a participar en nuestro concurso");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "La compra ha sido √©xitosa.");
                limpiar();
            }
        }
    }//GEN-LAST:event_btnComprarActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
          if (tablaCarrito.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione el producto que desea comprar");
        } else {
            int fila = tablaCarrito.getSelectedRow();
            String identificador = tablaCarrito.getValueAt(fila, 2).toString();
            boolean aux = controlador.eliminarProductoCarrito(identificador);
            if (aux) {
                JOptionPane.showMessageDialog(null, "Se actualiz√≥ el carrito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar");
            }
            
    }//GEN-LAST:event_jButton1ActionPerformed
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnComprar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaCarrito;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
