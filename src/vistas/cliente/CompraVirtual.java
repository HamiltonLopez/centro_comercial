/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.cliente;

import Singleton.SingletonCC;
import controladores.ControladorCliente;
import excepciones.StockExcedidoException;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelos.CentroComercial;
import modelos.Producto;
import util.Lista;
import util.Pila;

/**
 *
 * @author Asus
 */
public class CompraVirtual extends javax.swing.JPanel {

    TableRowSorter<DefaultTableModel> sorter;
    CentroComercial centro;
    private DefaultTableModel modelo;
    ControladorCliente controlador;
    Pila<Producto> pilaZ ;
    Pila<Producto> pilaY ;

    public CompraVirtual(ControladorCliente controlador) {
        initComponents();
        this.controlador = controlador;
        modelo = new DefaultTableModel();
        this.tablaProductos.setModel(modelo);
        modelo.addColumn("Cantidad");
        modelo.addColumn("Nombre");
        modelo.addColumn("Identificador");
        modelo.addColumn("Precio");
        pilaY = new Pila<>();
        pilaZ = new Pila<>();
        
        centro = SingletonCC.getINSTANCIA().getInstancia();
        limpiar();
    }

    public void removerTablaProductos() {

        for (int i = 0; i < modelo.getRowCount(); i++) {
            modelo.removeRow(i);
        }

    }

    public void llenarFiltro() {
        if (comboFiltro.getSelectedIndex() == 0) {
            removerTablaProductos();

            Lista<Producto> productos = centro.getProductos();
            for (int i = 0; i < productos.Size(); i++) {
                Producto producto = productos.obtener(i);

                String[] info = new String[4];
                info[0] = String.valueOf(producto.getCantBodega());
                info[1] = producto.getNombreProducto();
                info[2] = producto.getIdentificador();
                info[3] = String.valueOf(producto.getPrecio());

                modelo.addRow(info);

            }
        } else {
            removerTablaProductos();
            String filtro = comboFiltro.getSelectedItem().toString();
            Lista<Producto> productos = centro.getProductos();
            for (int i = 0; i < productos.Size(); i++) {
                Producto producto = productos.obtener(i);
                if (producto != null && producto.getCategoria().equals(filtro)) {

                    String[] info = new String[4];
                    info[0] = String.valueOf(producto.getCantBodega());
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    modelo.addRow(info);

                }
            }
        }

    }

    public void limpiarFiltro() {
        removerTablaProductos();
        llenarFiltro();
    }

    public void llenarTablaProductos() {
        
        removerTablaProductos();
        Lista<Producto> productos = controlador.getProductosGeneral();
        for (int i = 0; i < productos.Size(); i++) {
            Producto producto = productos.obtener(i);
            if (producto != null) {
                if (producto.getCantBodega() == 0) {
                    String[] info = new String[4];
                    info[0] = String.valueOf("SIN STOCK");
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    modelo.addRow(info);

                } else {
                    String[] info = new String[4];
                    info[0] = String.valueOf(producto.getCantBodega());
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    modelo.addRow(info);
                }

            } else {

            }

            tablaProductos.setAutoCreateRowSorter(true);
            sorter = new TableRowSorter<>(modelo);
            tablaProductos.setRowSorter(sorter);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        btnAgregarCarrito = new javax.swing.JButton();
        comboFiltro = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        spinCantidad = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtFiltro = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductosMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tablaProductos);

        btnAgregarCarrito.setBackground(new java.awt.Color(0, 153, 153));
        btnAgregarCarrito.setForeground(new java.awt.Color(255, 255, 255));
        btnAgregarCarrito.setText("AGREGAR AL CARRITO");
        btnAgregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCarritoActionPerformed(evt);
            }
        });

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Mercado", "Electrodomesticos", "Hogar y muebles", "Deportes", "Licores" }));
        comboFiltro.setBorder(null);
        comboFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFiltroActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(0, 0, 0));
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("FILTRAR POR TIPO DE ARTICULO");

        spinCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Seleccione la cantidad");

        btnBuscar.setBackground(new java.awt.Color(0, 153, 153));
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa (1) (1).png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtFiltro.setForeground(new java.awt.Color(153, 153, 153));
        txtFiltro.setBorder(null);
        txtFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFiltroMousePressed(evt);
            }
        });
        txtFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFiltroActionPerformed(evt);
            }
        });
        txtFiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroKeyTyped(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("BUSCAR POR NOMBRE :");

        jButton1.setText("CONTROL Z");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("CONTROL Y");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jLabel3)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(btnAgregarCarrito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(comboFiltro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jSeparator1)
                                        .addComponent(txtFiltro, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)))))
                        .addGap(28, 28, 28))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(48, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBuscar)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 48, 48)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addComponent(btnAgregarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 895, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 1, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 593, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablaProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductosMouseClicked
        //        int seleccionar = tablaProductos.rowAtPoint(evt.getPoint());
        //        JOptionPane.showMessageDialog(null, tablaProductos.getValueAt(seleccionar, 1));
    }//GEN-LAST:event_tablaProductosMouseClicked

    private void btnAgregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCarritoActionPerformed
        if (tablaProductos.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione el producto que desea comprar");
        } else {

            int fila = tablaProductos.getSelectedRow();
            String identificador = tablaProductos.getValueAt(fila, 2).toString();
            int cantidad = Integer.parseInt(spinCantidad.getValue().toString());
            try {
                boolean aux = controlador.agregarCarrito(identificador, cantidad);
                if (aux) {
                    JOptionPane.showMessageDialog(null, "Se agregó al carrito");
                    
                    Producto pro = controlador.buscarProductoCarrito(identificador);
                    pilaZ.push(pro);
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "No se agregó al carrito");
                }
            } catch (StockExcedidoException ex) {
                ex.getMessage();
            }

        }
    }//GEN-LAST:event_btnAgregarCarritoActionPerformed

    private void comboFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFiltroActionPerformed
        limpiarFiltro();
    }//GEN-LAST:event_comboFiltroActionPerformed

    private void txtFiltroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFiltroMousePressed
        if (txtFiltro.getText().equalsIgnoreCase("Buscar")) {
            txtFiltro.setText("");
            txtFiltro.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtFiltroMousePressed
    TableRowSorter trs;
    private void txtFiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroKeyTyped

       //filtrarAutomatico();
    }//GEN-LAST:event_txtFiltroKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtFiltro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el nombre del producto que quiere buscar.");
        } else {
            String buscado = txtFiltro.getText();
            if (comboFiltro.getSelectedIndex() == 0) {
                removerTablaProductos();

                Lista<Producto> productos = centro.getProductos();
                for (int i = 0; i < productos.Size(); i++) {
                    Producto producto = productos.obtener(i);
                    if (producto != null && producto.getNombreProducto().equalsIgnoreCase(buscado)) {
                        String[] info = new String[4];
                        info[0] = String.valueOf(producto.getCantBodega());
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        modelo.addRow(info);

                    }

                }
            } else {
                removerTablaProductos();
                String filtro = comboFiltro.getSelectedItem().toString();
                Lista<Producto> productos = centro.getProductos();
                for (int i = 0; i < productos.Size(); i++) {
                    Producto producto = productos.obtener(i);
                    if (producto != null && producto.getNombreProducto().equalsIgnoreCase(buscado) && producto.getCategoria().equals(filtro)) {

                        String[] info = new String[4];
                        info[0] = String.valueOf(producto.getCantBodega());
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        modelo.addRow(info);

                    }
                }
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFiltroActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Producto producto = pilaY.pop();
        pilaZ.push(producto);
        controlador.agregarCarrito(producto.getIdentificador(), producto.getCantBodega());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Producto pro = pilaZ.pop();
        pilaY.push(pro);
        controlador.eliminarProductoCarrito(pro.getIdentificador());
    }//GEN-LAST:event_jButton1ActionPerformed
    public void limpiar() {
        removerTablaProductos();
        llenarTablaProductos();
    }
    private void filtrarAutomatico(){
        try{
            sorter.setRowFilter(RowFilter.regexFilter("(?i)"+txtFiltro.getText(), 1));
        }catch(Exception e){
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCarrito;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner spinCantidad;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtFiltro;
    // End of variables declaration//GEN-END:variables
}
