/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.parqueadero;

import controladores.ControladorParking;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import modelos.Casilla;
import modelos.Vehiculo;
import util.Pila;

/**
 *
 * @author Asus
 */
public class Estacionamientos extends javax.swing.JPanel implements ActionListener {

    Pila<Vehiculo> pilaZ;
    Pila<Vehiculo> pilaY;
    JButton[][] botones;
    ControladorParking controlador;

    public Estacionamientos() {
        initComponents();
        botones = new JButton[7][15];
        controlador = new ControladorParking();
       
        cargarBotones();
        validarPosiciones();

    }

    public void validarPosiciones() {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                Casilla casilla = controlador.obtenerCasilla(i, j);
                if (casilla.getEstado().equals(Casilla.DISPONIBLE)) {
                    botones[i][j].setBackground(Color.green);
                    botones[i][j].setForeground(Color.WHITE);
                } else {
                    botones[i][j].setBackground(Color.red);
                }

            }

        }

    }

    public void cargarBotones() {
        int ancho = 60;
        int alto = 80;
        int separado = 30;

        int num = 1;
        char texto = 'A';
        for (int i = 0; i < botones.length; i++) {

            for (int j = 0; j < botones[i].length; j++) {
                if (i == 1 || i == 3 || i == 5 || (i == 2 && j == 0) || (i == 2 && j == 14) || (i == 4 && j == 0) || (i == 4 && j == 14) || (i == 6 && j <= 2) || (i == 6 && j >= 12)) {
                    botones[i][j] = new JButton();
                } else {
                    botones[i][j] = new JButton();
                    botones[i][j].setBounds((j * ancho + separado), (i * alto + separado), ancho, alto);
                    botones[i][j].setText(String.valueOf("P" + num));
                    botones[i][j].setForeground(Color.white);
                    botones[i][j].addActionListener(this);
                    panelPisoUno.add(botones[i][j]);

                    num++;
                }

            }

        }

    }

    public ControladorParking getControlador() {
        return controlador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPisoUno = new javax.swing.JPanel();

        panelPisoUno.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout panelPisoUnoLayout = new javax.swing.GroupLayout(panelPisoUno);
        panelPisoUno.setLayout(panelPisoUnoLayout);
        panelPisoUnoLayout.setHorizontalGroup(
            panelPisoUnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
        );
        panelPisoUnoLayout.setVerticalGroup(
            panelPisoUnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1012, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(panelPisoUno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 636, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(panelPisoUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel panelPisoUno;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < botones.length; i++) {
            for (int j = 0; j < botones[i].length; j++) {
                if (e.getSource().equals(botones[i][j])) {
                    Casilla casilla = controlador.obtenerCasilla(i, j);
                    if (casilla.getEstado().equals(Casilla.DISPONIBLE)) {
                        AsignarPuesto vista = new AsignarPuesto(this, i, j);
                        vista.setVisible(true);

                    } else {
                        Vehiculo vehi = casilla.getPuesto().getVehiculo();
                        JOptionPane.showMessageDialog(null, "PLACA : " + vehi.getPlaca()
                                + "\nTIPO VEHICULO : " + vehi.getTipo()
                                + "\nFECHA INGRESO : " + vehi.getHoraEntrada());

                    }
                }
            }

        }
    }
}
