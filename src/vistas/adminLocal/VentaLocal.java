/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package vistas.adminLocal;

import ValidarCampos.ValidarCampos;
import controladores.ControladorAdminLocal;
import excepciones.StockExcedidoException;
import excepciones.UsuarioNoEncontradoException;
import java.awt.Color;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modelos.Cliente;
import modelos.Compra;
import modelos.Producto;
import modelos.Venta;
import util.Lista;

/**
 *
 * @author Asus
 */
public class VentaLocal extends javax.swing.JPanel {
TableRowSorter<DefaultTableModel> sorter;
    private DefaultTableModel tablaP;
    private DefaultTableModel tablaC;
    ControladorAdminLocal controlador;

    public VentaLocal(ControladorAdminLocal controlador) {
        initComponents();
        tablaP = new DefaultTableModel();
        tablaC = new DefaultTableModel();
        this.tablaProductos1.setModel(tablaP);
        tablaP.addColumn("Cantidad");
        tablaP.addColumn("Nombre");
        tablaP.addColumn("Identificador");
        tablaP.addColumn("Precio");
        this.tablaCarrito.setModel(tablaC);
        tablaC.addColumn("Cantidad");
        tablaC.addColumn("Nombre");
        tablaC.addColumn("Identificador");
        tablaC.addColumn("Precio");
        this.controlador = controlador;
        limpiar();
    }

    public void limpiar() {

        ////////////////////////////////
        removerTablaProductos();
        removerTablaCarrito();
        llenarTablaCarrito();
        limpiarFiltro();

        int total = 0;
        if (tablaC.getRowCount() > 0) {
            for (int i = 0; i < tablaCarrito.getRowCount(); i++) {
                int suma = Integer.parseInt(tablaCarrito.getValueAt(i, 3).toString());
                total += suma;
            }
            txtTotal.setText(String.valueOf(total));
        } else {
            txtTotal.setText("0");
        }
    }

    public void removerFiltro() {

        for (int i = 0; i < tablaP.getRowCount(); i++) {
            tablaP.removeRow(i);
        }

    }

    public void llenarTablaCarrito() {
        removerTablaCarrito();
        if (txtCliente.getText().isEmpty()) {

        } else {
            String documento = txtCliente.getText();
            Cliente cliente = controlador.buscarCliente(documento);

            Lista<Producto> productos = cliente.getCarrito();
            for (int i = 0; i < productos.Size(); i++) {
                Producto producto = productos.obtener(i);
                if (producto != null) {

                    String[] info = new String[4];
                    info[0] = String.valueOf(producto.getCantBodega());
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    tablaC.addRow(info);

                } else {

                }
            }

        }
    }

    public void removerTablaProductos() {

        for (int i = 0; i < tablaP.getRowCount(); i++) {
            tablaP.removeRow(i);
        }

    }

    public void removerTablaCarrito() {

        for (int i = 0; i < tablaC.getRowCount(); i++) {
            tablaC.removeRow(i);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablaProductos1 = new javax.swing.JTable();
        btnAgregarCarrito = new javax.swing.JButton();
        comboFiltro = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        spinCantidad = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtBuscarCliente = new javax.swing.JButton();
        txtNombreCliente = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        txtFiltro = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnBuscar = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tablaCarrito = new javax.swing.JTable();
        btnComprar = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        tablaProductos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tablaProductos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaProductos1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablaProductos1);

        btnAgregarCarrito.setBackground(new java.awt.Color(0, 204, 0));
        btnAgregarCarrito.setForeground(new java.awt.Color(0, 0, 0));
        btnAgregarCarrito.setText("AGREGAR AL CARRITO");
        btnAgregarCarrito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarCarritoActionPerformed(evt);
            }
        });

        comboFiltro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Mercado", "Electrodomesticos", "Hogar y muebles", "Deportes", "Licores" }));
        comboFiltro.setBorder(null);
        comboFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFiltroActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 0, 0));
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("FILTRAR POR TIPO ");

        spinCantidad.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Seleccione la cantidad");

        txtCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtCliente.setBorder(null);
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteKeyTyped(evt);
            }
        });

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Ingrese el documento del cliente :");

        txtBuscarCliente.setBackground(new java.awt.Color(0, 153, 153));
        txtBuscarCliente.setForeground(new java.awt.Color(255, 255, 255));
        txtBuscarCliente.setText("BUSCAR");
        txtBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarClienteActionPerformed(evt);
            }
        });

        txtNombreCliente.setBackground(new java.awt.Color(255, 255, 255));
        txtNombreCliente.setForeground(new java.awt.Color(0, 0, 0));
        txtNombreCliente.setBorder(null);

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("CLIENTE EN ATENCION");

        txtFiltro.setForeground(new java.awt.Color(153, 153, 153));
        txtFiltro.setText("Buscar");
        txtFiltro.setBorder(null);
        txtFiltro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtFiltroMousePressed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("BUSCAR POR NOMBRE");

        btnBuscar.setBackground(new java.awt.Color(0, 153, 153));
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/lupa (1) (1).png"))); // NOI18N
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addComponent(txtBuscarCliente))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFiltro)
                            .addComponent(jSeparator1)
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57))
                            .addGroup(jPanel9Layout.createSequentialGroup()
                                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnAgregarCarrito)
                                    .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addComponent(jLabel6))
                                    .addGroup(jPanel9Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel2)
                                            .addGroup(jPanel9Layout.createSequentialGroup()
                                                .addGap(23, 23, 23)
                                                .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jSeparator5)
                            .addComponent(txtCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(64, 64, 64))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBuscar)
                        .addGap(12, 12, 12)
                        .addComponent(btnAgregarCarrito, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(63, 63, 63))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(14, 14, 14))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarCliente)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jPanel22.setBackground(new java.awt.Color(255, 255, 255));

        tablaCarrito.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(tablaCarrito);

        btnComprar.setBackground(new java.awt.Color(255, 255, 0));
        btnComprar.setForeground(new java.awt.Color(0, 0, 0));
        btnComprar.setText("FINALIZAR COMPRA");
        btnComprar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComprarActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("TOTAL A PAGAR :");

        txtTotal.setBackground(new java.awt.Color(255, 255, 255));
        txtTotal.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        txtTotal.setBorder(null);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("$");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("CARRITO DEL CLIENTE");

        jButton1.setBackground(new java.awt.Color(255, 0, 0));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("ELIMINAR PRODUCTO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel22Layout.createSequentialGroup()
                            .addGap(33, 33, 33)
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel9)
                                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnComprar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel22Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9))
                    .addGroup(jPanel22Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnComprar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel10))
                .addGap(28, 28, 28))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tablaProductos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaProductos1MouseClicked
        //        int seleccionar = tablaProductos.rowAtPoint(evt.getPoint());
        //        JOptionPane.showMessageDialog(null, tablaProductos.getValueAt(seleccionar, 1));
    }//GEN-LAST:event_tablaProductos1MouseClicked

    private void btnAgregarCarritoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarCarritoActionPerformed
        if (tablaProductos1.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione el producto que desea comprar");
        } else {

            int fila = tablaProductos1.getSelectedRow();
            String identificador = tablaProductos1.getValueAt(fila, 2).toString();
            int cantidad = Integer.parseInt(spinCantidad.getValue().toString());
            String documento = txtCliente.getText();
            Cliente cliente = controlador.buscarCliente(documento);
            try {
                boolean aux = controlador.agregarCarrito(cliente, identificador, cantidad);
                if (aux) {
                    JOptionPane.showMessageDialog(null, "Se agregó al carrito");
                    limpiar();
                } else {
                    JOptionPane.showMessageDialog(null, "No se agregó al carrito");
                }
            } catch (StockExcedidoException ex) {
                ex.getMessage();
            }

        }
    }//GEN-LAST:event_btnAgregarCarritoActionPerformed

    private void comboFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFiltroActionPerformed
        limpiarFiltro();
    }//GEN-LAST:event_comboFiltroActionPerformed

    public void limpiarFiltro() {
        removerTablaProductos();
        llenarFiltro();
    }

    public void llenarFiltro() {
        removerTablaProductos();
        if (comboFiltro.getSelectedIndex() == 0) {

            Lista<Producto> productos = controlador.getProductosLocal();
            for (int i = 0; i < productos.Size(); i++) {
                Producto producto = productos.obtener(i);
                if (producto.getCantBodega() <= 0) {
                    String[] info = new String[4];
                    info[0] = String.valueOf("SIN STOCK");
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    tablaP.addRow(info);
                } else {
                    String[] info = new String[4];
                    info[0] = String.valueOf(producto.getCantBodega());
                    info[1] = producto.getNombreProducto();
                    info[2] = producto.getIdentificador();
                    info[3] = String.valueOf(producto.getPrecio());

                    tablaP.addRow(info);
                }

            }
        } else {

            String filtro = comboFiltro.getSelectedItem().toString();
            Lista<Producto> productos = controlador.getProductosLocal();
            for (int i = 0; i < productos.Size(); i++) {
                Producto producto = productos.obtener(i);
                if (producto != null && producto.getCategoria().equals(filtro)) {
                    if (producto.getCantBodega() <= 0) {
                        String[] info = new String[4];
                        info[0] = String.valueOf("SIN STOCK");
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        tablaP.addRow(info);
                    } else {
                        String[] info = new String[4];
                        info[0] = String.valueOf(producto.getCantBodega());
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        tablaP.addRow(info);
                    }

                }
            }
        }

    }
    private void txtBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarClienteActionPerformed
        if (txtCliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el numero de documento\ndel cliente.");
        } else {
            String documento = txtCliente.getText();
            try {
                Cliente cliente = controlador.buscarCliente(documento);
                if (cliente != null) {
                    txtNombreCliente.setText(cliente.getNombre());
                    txtCliente.setEditable(false);
                    limpiar();
                }
            } catch (UsuarioNoEncontradoException ex) {
                ex.getMessage();
            }

        }
    }//GEN-LAST:event_txtBuscarClienteActionPerformed

    private void btnComprarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComprarActionPerformed
        if (txtCliente.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el numero de documento\ndel cliente.");
        } else {
            String documento = txtCliente.getText();
            try {
                Cliente cliente = controlador.buscarCliente(documento);
                if (cliente.getCarrito().Size() == 0) {
                    JOptionPane.showMessageDialog(null, "No hay ningún articulo dentro del carrito.\nIntente nuevamente");
                } else {
                    Date fecha = new Date();
                    int compraTotal = Integer.parseInt(txtTotal.getText());
                    Lista<Producto> productos = cliente.getCarrito();
                    int total = controlador.retornarCantidadProductos(productos);
                    Compra compra = new Compra(productos);
                    compra.setArticulos(total);
                    Date hoy = new Date(fecha.getYear(), fecha.getMonth(), fecha.getDay());
                    Venta venta = new Venta(cliente, fecha, compraTotal, compra);
                    boolean aux = controlador.comprarProducto(venta);
                    if (aux) {
                        JOptionPane.showMessageDialog(null, "La compra ha sido éxitosa.\nFelicitaciones entras a participar en nuestro concurso");
                        limpiar();
                        txtCliente.setText("");
                        txtNombreCliente.setText("");
                        txtCliente.setEditable(true);
                    } else {
                        JOptionPane.showMessageDialog(null, "La compra ha sido éxitosa.");
                        limpiar();
                        txtCliente.setText("");
                        txtNombreCliente.setText("");
                        txtCliente.setEditable(true);
                    }
                }
            } catch (UsuarioNoEncontradoException ex) {
                ex.getMessage();
            }

        }
    }//GEN-LAST:event_btnComprarActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtFiltroMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtFiltroMousePressed
        if (txtFiltro.getText().equalsIgnoreCase("Buscar")) {
            txtFiltro.setText("");
            txtFiltro.setForeground(Color.black);
        }
    }//GEN-LAST:event_txtFiltroMousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (tablaCarrito.getSelectionModel().isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Seleccione el producto que desea comprar");
        } else {
            int fila = tablaCarrito.getSelectedRow();
            String identificador = tablaCarrito.getValueAt(fila, 2).toString();
            boolean aux = controlador.eliminarProductoCarrito(identificador);
            if (aux) {
                JOptionPane.showMessageDialog(null, "Se actualizó el carrito");
                limpiar();
            } else {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar");
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyTyped
      new ValidarCampos().validarNumeros(evt);
    }//GEN-LAST:event_txtClienteKeyTyped

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (txtFiltro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Ingrese el nombre del producto que quiere buscar.");
        } else {
            String buscado = txtFiltro.getText();
            if (comboFiltro.getSelectedIndex() == 0) {
                removerTablaProductos();

                Lista<Producto> productos = controlador.getProductosLocal();
                for (int i = 0; i < productos.Size(); i++) {
                    Producto producto = productos.obtener(i);
                    if (producto != null && producto.getNombreProducto().equalsIgnoreCase(buscado)) {
                        String[] info = new String[4];
                        info[0] = String.valueOf(producto.getCantBodega());
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        tablaP.addRow(info);

                    }

                }
            } else {
                removerTablaProductos();
                String filtro = comboFiltro.getSelectedItem().toString();
                Lista<Producto> productos = controlador.getProductosLocal();
                for (int i = 0; i < productos.Size(); i++) {
                    Producto producto = productos.obtener(i);
                    if (producto != null && producto.getNombreProducto().equalsIgnoreCase(buscado) && producto.getCategoria().equals(filtro)) {

                        String[] info = new String[4];
                        info[0] = String.valueOf(producto.getCantBodega());
                        info[1] = producto.getNombreProducto();
                        info[2] = producto.getIdentificador();
                        info[3] = String.valueOf(producto.getPrecio());

                        tablaP.addRow(info);

                    }
                }
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarCarrito;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnComprar;
    private javax.swing.JComboBox<String> comboFiltro;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSpinner spinCantidad;
    private javax.swing.JTable tablaCarrito;
    private javax.swing.JTable tablaProductos1;
    private javax.swing.JButton txtBuscarCliente;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtFiltro;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
}
